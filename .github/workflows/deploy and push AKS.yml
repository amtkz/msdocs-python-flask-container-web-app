name: AKS Deployment


on:
  workflow_dispatch

jobs:
  build:
    name: Build and Push to ACR
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v4
    - uses: azure/docker-login@v1
      with:
        login-server: amitd.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
                
    - name: Setup Python
      uses: actions/setup-python@v5.6.0
      with:
        # Version range or exact version of Python or PyPy to use, using SemVer's version range syntax. Reads from .python-version if unset.
        python-version: ${{ matrix.python-version }}
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Flask-WTF pymongo gunicorn requests flask

    - name: docker-build
      run: docker build . -t myapp:${{ github.sha }}

    - name: tag docker image
      run: docker tag myapp:${{ github.sha }} amitd.azurecr.io/myapp:${{ github.sha }}

    - name: push docker image
      run: docker push amitd.azurecr.io/myapp:${{ github.sha }}

  deploy:
    name: ðŸ§© Deploy to AKS
    needs: build
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install kubelogin (AAD support)
        run: |
          curl -sL https://github.com/Azure/kubelogin/releases/latest/download/kubelogin-linux-amd64.tar.gz \
          | tar -xz -C /usr/local/bin

      - name: Get AKS kubeconfig
        run: |
          export KUBECONFIG="${RUNNER_TEMP}/kubeconfig"
          az aks get-credentials \
            --resource-group "${{ env.RESOURCE_GROUP }}" \
            --name "${{ env.CLUSTER_NAME }}" \
            --file "$KUBECONFIG" \
            --overwrite-existing
          kubelogin convert-kubeconfig -l azurecli

      - name: Set AKS context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ env.KUBECONFIG }}
          context: "$(kubectl config current-context)"
    
      - name: Deploy to AKS using manifest(s)
        uses: azure/k8s-deploy@v4
        with:
          manifests: |
            k8s/deployment.yaml
            k8s/service.yaml
          images: |
            amitd.azurecr.io/myapp:${{ github.sha }}
     
